<?php

class CvMenudetailsController extends Controller
{
	/**
	 * @var string the default layout for the views. Defaults to '//layouts/column2', meaning
	 * using two-column layout. See 'protected/views/layouts/column2.php'.
	 */
	public $layout='//layouts/column2';

	/**
	 * @return array action filters
	 */
	public function filters()
	{
		return array(
			'accessControl', // perform access control for CRUD operations
			'postOnly + delete', // we only allow deletion via POST request
		);
	}

	/**
	 * Specifies the access control rules.
	 * This method is used by the 'accessControl' filter.
	 * @return array access control rules
	 */
	public function accessRules()
	{
		return array(
			array('allow',  // allow all users to perform 'index' and 'view' actions
				'actions'=>array('index','view'),
				'users'=>array('*'),
			),
			array('allow', // allow authenticated user to perform 'create' and 'update' actions
				'actions'=>array('create','update'),
				'roles'=>array('gen'),
			),
			array('allow', // allow admin user to perform 'admin' and 'delete' actions
				'actions'=>array('admin','delete','deleteall'),
				'roles'=>array('admin'),
			),
			array('deny',  // deny all users
				'users'=>array('*'),
			),
		);
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionView($id)
	{
		$this->render('view',array(
			'model'=>$this->loadModel($id),
		));
	}

	/**
	 * Creates a new model.
	 * If creation is successful, the browser will be redirected to the 'view' page.
	 */
	public function actionCreate()
	{
		$model=new CvMenudetails;

		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['CvMenudetails']))
		{
			$model->attributes=$_POST['CvMenudetails'];
			if($model->save())
				$this->redirect(array('view','id'=>$model->menu_id));
		}

		$this->render('create',array(
			'model'=>$model,
		));
	}

	/**
	 * Updates a particular model.
	 * If update is successful, the browser will be redirected to the 'view' page.
	 * @param integer $id the ID of the model to be updated
	 */
	public function actionDeleteAll()
	{
		if (isset($_POST['id']))
		{
			$id=array();
			$id = $_POST['id'];
	
	
		
			for($i=0;$i<count($id);$i++)
			{
			$model1=new CvRelatedlinks;
			$model1=$this->loadModel($id[$i]);
	
			$model1->is_delete = 'Y';
			$model1->save();
						}
	
		}
		
		
	}
	public function actionDelete()
	{
		if (isset($_POST['id']))
		{
	
			$id = $_POST['id'];
	
	
	
		
			$model1=new CvRelatedlinks;
			$model1=$this->loadModel($id);
	
			$model1->is_delete = 'Y';
			$model1->save();
			
	
		
	
	
		}
	}
	
	
	public function actionUpdate($id)
	{
		$model=$this->loadModel($id);

		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['CvMenudetails']))
		{
			$model->attributes=$_POST['CvMenudetails'];
			if($model->save())
				$this->redirect(array('view','id'=>$model->menu_id));
		}

		$this->render('update',array(
			'model'=>$model,
		));
	}

	/**
	 * Deletes a particular model.
	 * If deletion is successful, the browser will be redirected to the 'admin' page.
	 * @param integer $id the ID of the model to be deleted
	 */
	

	/**
	 * Lists all models.
	 */
	public function actionIndex()
	{
		$dataProvider=new CActiveDataProvider('CvMenudetails');
		$this->render('index',array(
			'dataProvider'=>$dataProvider,
		));
	}

	/**
	 * Manages all models.
	 */
	public function actionAdmin()
	
		{
			$model = CvMenudetails::model()->findAll();
			$this->render('admin',array(
					'model'=>$model,
			));
		}
	

	/**
	 * Returns the data model based on the primary key given in the GET variable.
	 * If the data model is not found, an HTTP exception will be raised.
	 * @param integer $id the ID of the model to be loaded
	 * @return CvMenudetails the loaded model
	 * @throws CHttpException
	 */
	public function loadModel($id)
	{
		$model=CvMenudetails::model()->findByPk($id);
		if($model===null)
			throw new CHttpException(404,'The requested page does not exist.');
		return $model;
	}

	/**
	 * Performs the AJAX validation.
	 * @param CvMenudetails $model the model to be validated
	 */
	protected function performAjaxValidation($model)
	{
		if(isset($_POST['ajax']) && $_POST['ajax']==='cv-menudetails-form')
		{
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}
	}
}

<html>
<head>
<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.5/css/jquery.dataTables.css">
  
<!-- jQuery -->
<script type="text/javascript" charset="utf8" src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
  
<!-- DataTables -->
<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.5/js/jquery.dataTables.js"></script>
<script type="text/javascript">
$(document).ready( function () {
    $('#table_id').DataTable();
} );
</script>

<script type="text/javascript">
$(document).ready(function() {
	$("#delete").on('click', function () {
		alert('hello');
		var url = $('#appURL').val();
		var url1 = $('#app1URL').val();
	    id=[];
	    var id = $("input[name='letter[]']:checked").map(function() { 
	            return this.value; 
	          }).get();
        alert('hello'+id)
	    $.ajax({
	   type: "POST",
	   data: {id:id},
	   url:url,
	   success: function(msg){
		   alert('success')
		   window.location.reload();
	   }
	});
	});
});
</script>

<script type="text/javascript">
$(document).ready(function() {
	$(".delete_sin").on('click', function () {
	
		var url = $('#app1URL').val();
	
	    
	    var id = $(this).data('id');
       
	    $.ajax({
	   type: "POST",
	   data: {id:id},
	   url:url,
	   success: function(msg){
		   alert('success')
		   window.location.reload();
	   }
	});
	});
});
</script>
</head>
<body>

<input type="button" id="delete" calss="deleteall" value="deleteall" />
<input type="hidden" id="appURL"  value="<?php echo $this->createUrl('cvMenudetails/deleteAll')?>"/>
<input type="hidden" id="app1URL"  value="<?php echo $this->createUrl('cvMenudetails/delete')?>"/>
<table id="table_id" class="display">
    <thead>
        <tr>
        <th>&nbsp;</th>
            <th>menu id</th>
            <th>menu label</th>
            <th>parent_menu</th>
            <th>has_sub_menu</th>
            <th>is_header_footer</th>
            <th>is_faq_menu</th>
            <th>menu_link</th>
             <th>is_delete</th>
           <th>&nbsp;</th>
       
        </tr>
    </thead>
    <tbody>
    <?php foreach ($model as $value)
    {
    
    ?>
        <tr>
        <?php 
     if($value->is_delete=='Y')
     {
     	?>
     	<td>&nbsp;</td>
     	<?php 
     }
     
     else{
     	?>
        	<td><input type="checkbox" value="<?php echo $value->menu_id?>" name="letter[]" />
        	</td>
       
      
          <?php 
     }
    ?>
            <td><?php echo $value->menu_id?></td>
             <td><?php echo $value->menu_label?></td>
              <td><?php echo $value->parent_menu_id?></td>
               <td><?php echo $value->has_sub_menu?></td>
               
               <td><?php echo $value->is_header_footer ?></td>
             <td><?php echo $value->is_faq_menu ?></td>
              <td><?php echo $value->menu_link ?></td>
              <td><?php echo $value->is_delete ?></td>
               <td><a href="/cv_helper/index.php/cvMenudetails/view/<?php echo $value->menu_id?>">view</a><br>
               <a href="" data-id="<?php echo $value->menu_id?>" class="delete_sin">del</a><br>
               <a href="/cv_helper/index.php/cvMenudetails/update/<?php echo $value->menu_id?>">update</a></td>
              
               
    
    
          
       
        </tr>
        <?php 
    }
    ?>
 
    </tbody>
</table>

</body>
</html>
<?php

class CvRelatedlinksController extends Controller
{
	/**
	 * @var string the default layout for the views. Defaults to '//layouts/column2', meaning
	 * using two-column layout. See 'protected/views/layouts/column2.php'.
	 */
	public $layout='//layouts/column2';

	/**
	 * @return array action filters
	 */
	public function filters()
	{
		return array(
			'accessControl', // perform access control for CRUD operations
			'postOnly + delete', // we only allow deletion via POST request
		);
	}

	/**
	 * Specifies the access control rules.
	 * This method is used by the 'accessControl' filter.
	 * @return array access control rules
	 */
	public function accessRules()
	{
		return array(
			array('allow',  // allow all users to perform 'index' and 'view' actions
				'actions'=>array('index','view'),
				'users'=>array('*'),
			),
			array('allow', // allow authenticated user to perform 'create' and 'update' actions
				'actions'=>array('create','update'),
				'roles'=>array('gen'),
			),
			array('allow', // allow admin user to perform 'admin' and 'delete' actions
				'actions'=>array('admin','delete','deleteall'),
				'roles'=>array('admin'),
			),
			array('deny',  // deny all users
				'users'=>array('*'),
			),
		);
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionView($id)
	{
		$this->render('view',array(
			'model'=>$this->loadModel($id),
		));
	}

	/**
	 * Creates a new model.
	 * If creation is successful, the browser will be redirected to the 'view' page.
	 */
	public function actionCreate()
	{
	
		$model=new CvRelatedlinks;
		$menus = array(); 
		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['CvRelatedlinks']))
		{
			$model->attributes=$_POST['CvRelatedlinks'];

			$menus = $_POST['menus'];
			$valid=false;
			for($i=0;$i<count($menus);$i++)
			{
				$model1=new CvRelatedlinks;
				//$model->menu_id=$menus[$i];
				$model1->attributes=$_POST['CvRelatedlinks'];
				$model1->menu_id=$menus[$i];
				if($model1->save()){
					$valid = true;
				}else{
					$valid = false;
				}									
			}
			
			if($valid)
				$this->redirect(array('admin'));
		}


		$this->render('create',array(
			'model'=>$model,'menus'=>$menus,
		));
	}

	/**
	 * Updates a particular model.
	 * If update is successful, the browser will be redirected to the 'view' page.
	 * @param integer $id the ID of the model to be updated
	 */
	public function actionDeleteAll()
	{
		if (isset($_POST['campaign-grid_c0']))
		{
			$del_camps = $_POST['campaign-grid_c0'];
	
			$model_camp=new CvRelatedlinks();
	
	
			foreach ($del_camps as $_camp_id)
			{
				$model_camp->deleteByPk($_camp_id);
					
			}
	
			$this->actionAdmin();
		}
		else
		{
			Yii::app()->user->setFlash('error', 'Please select at least one record to delete.');
			$this->actionAdmin();
		}
	}
	
	
	public function actionUpdate($id)
	{
		$model=$this->loadModel($id);

		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['CvRelatedlinks']))
		{
			$model->attributes=$_POST['CvRelatedlinks'];
			if($model->save())
				$this->redirect(array('view','id'=>$model->link_id));
		}

		$this->render('update',array(
			'model'=>$model,
		));
	}

	/**
	 * Deletes a particular model.
	 * If deletion is successful, the browser will be redirected to the 'admin' page.
	 * @param integer $id the ID of the model to be deleted
	 */
	public function actionDelete($id)
	{
		$this->loadModel($id)->delete();

		// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser
		if(!isset($_GET['ajax']))
			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));
	}

	/**
	 * Lists all models.
	 */
	public function actionIndex()
	{
		$dataProvider=new CActiveDataProvider('CvRelatedlinks');
		$this->render('index',array(
			'dataProvider'=>$dataProvider,
		));
	}

	/**
	 * Manages all models.
	 */
public function actionAdmin()
	{
		$model = CvRelatedlinks::model()->findAll();
		$this->render('admin',array(
			'model'=>$model,
		));
	}

	/**
	 * Returns the data model based on the primary key given in the GET variable.
	 * If the data model is not found, an HTTP exception will be raised.
	 * @param integer $id the ID of the model to be loaded
	 * @return CvRelatedlinks the loaded model
	 * @throws CHttpException
	 */
	public function loadModel($id)
	{
		$model=CvRelatedlinks::model()->findByPk($id);
		if($model===null)
			throw new CHttpException(404,'The requested page does not exist.');
		return $model;
	}

	/**
	 * Performs the AJAX validation.
	 * @param CvRelatedlinks $model the model to be validated
	 */
	protected function performAjaxValidation($model)
	{
		if(isset($_POST['ajax']) && $_POST['ajax']==='cv-relatedlinks-form')
		{
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}
	}
}

</div><!-- form -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
        rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
        rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
        type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#CvRelatedlinks_menu_id').multiselect({
                includeSelectAllOption: true
            });
           
        });
    </script>
   
   <?php
/* @var $this CvRelatedlinksController */
/* @var $model CvRelatedlinks */
/* @var $form CActiveForm */
?>

<div class="form">

  
 

<?php $form=$this->beginWidget('CActiveForm', array(
	'id'=>'cv-relatedlinks-form',
	// Please note: When you enable ajax validation, make sure the corresponding
	// controller action is handling ajax validation correctly.
	// There is a call to performAjaxValidation() commented in generated controller code.
	// See class documentation of CActiveForm for details on this.
	'enableAjaxValidation'=>false,
)); ?>

	<p class="note">Fields with <span class="required">*</span> are required.</p>

	<?php echo $form->errorSummary($model); ?>

	<div class="row">
		<?php echo $form->labelEx($model,'link_label'); ?>
		<?php echo $form->textField($model,'link_label',array('size'=>60,'maxlength'=>255)); ?>
		<?php echo $form->error($model,'link_label'); ?>
	</div>

	<div class="row">
		<?php echo $form->labelEx($model,'link_url'); ?>
		<?php echo $form->textField($model,'link_url',array('size'=>60,'maxlength'=>100)); ?>
		<?php echo $form->error($model,'link_url'); ?>
	</div>

	

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <link href="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css"
        rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
        rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
        type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#CvRelatedlinks_menu_id').multiselect({
                includeSelectAllOption: true
            });
           
        });
    </script>	

<div class="row">
   
    <select id="CvRelatedlinks_menu_id" multiple="multiple" name="menus[]">
    <?php 
    
    $data=Utility::getAllmenus();
    foreach($data as $menu)
    {
    ?>
        <option value="<?php echo $menu->menu_id ?>"><?php echo $menu->menu_label ?></option>
        <?php 
    }
        ?>
     
    </select>
    </div>
    <div class="row buttons">
		<?php echo CHtml::submitButton($model->isNewRecord ? 'Create' : 'Save'); ?>
	</div>
    <?php $this->endWidget(); ?>
    
</body>
</html>

